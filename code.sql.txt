Capstone Warby Parker Funnels
by Jason Moses
August 6, 2018

--Q1: Show columns in the survey table (slide 4)
SELECT *
FROM survey
LIMIT 10;

--Q2: Count the responses by survey question (slide 5)
SELECT question, COUNT(*) AS 'count'
FROM survey
GROUP BY question
ORDER BY question;

--Q4: What are the columns from the quiz table (slide 8)
SELECT *
FROM quiz
LIMIT 5;

--Q4: What are the columns from the home_try_on table (slide 8)
SELECT *
FROM home_try_on
LIMIT 5;

--Q4: What are the columns from the purchase table (slide 8)
SELECT *
FROM purchase
LIMIT 5;

--Q5: Combine the quiz, home_try_on, and purchase tables (slide 9)
SELECT quiz.user_id, 
   CASE
      WHEN home_try_on.user_id IS NOT NULL
      THEN 'True'
      ELSE 'False'
   END AS 'is_home_try_on', 	 		
   home_try_on.number_of_pairs,
   CASE
      WHEN purchase.user_id IS NOT NULL
      THEN 'True'
      ELSE 'False'
   END AS 'is_purchase'
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON quiz.user_id = purchase.user_id
LIMIT 10;

--Q6: Comparison of quiz, home_try_on, and purchase for overall conversion calculations (slide 10)
WITH home_test AS (
SELECT quiz.user_id, 
   CASE
      WHEN home_try_on.user_id IS NOT NULL 
      THEN 'True'
      ELSE 'False'
   END AS 'is_home_try_on',
   home_try_on.number_of_pairs,
   CASE
      WHEN purchase.user_id IS NOT NULL
      THEN 'True'
      ELSE 'False'
   END AS 'is_purchase'
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON quiz.user_id = purchase.user_id)
SELECT is_home_try_on, number_of_pairs, is_purchase, COUNT(user_id) AS 'users'
FROM home_test                     
GROUP BY 1, 2, 3  
ORDER BY 1 DESC, 2, 3 DESC;

--Q6: Comparison of quiz, home_try_on, and purchase including style and price (slide 13)
WITH home_test AS (
SELECT quiz.user_id, 
   CASE
      WHEN home_try_on.user_id IS NOT NULL 
      THEN 'True'
      ELSE 'False'
   END AS 'is_home_try_on',
   home_try_on.number_of_pairs, quiz.style,
   CASE
      WHEN purchase.user_id IS NOT NULL
      THEN 'True'
      ELSE 'False'
   END AS 'is_purchase', purchase.price
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON quiz.user_id = purchase.user_id)
SELECT is_home_try_on, number_of_pairs, style, is_purchase, COUNT(user_id) AS 'users', SUM(price) AS 'price'
FROM home_test                     
GROUP BY 1, 2, 3, 4  
ORDER BY 1 DESC, 2, 3 DESC, 4 DESC;

--Q6: Purchased styles sorted by most popular (slide 15, 16, and 17)
WITH home_test AS (
SELECT quiz.user_id, 
   CASE
      WHEN home_try_on.user_id IS NOT NULL 
      THEN 'True'
      ELSE 'False'
   END AS 'is_home_try_on',
   home_try_on.number_of_pairs, quiz.style, quiz.fit, quiz.shape, quiz.color, purchase.price,
   CASE
      WHEN purchase.user_id IS NOT NULL
      THEN 'True'
      ELSE 'False'
   END AS 'is_purchase'
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON quiz.user_id = purchase.user_id)
SELECT style, fit, shape, color, COUNT(user_id) AS 'users', SUM(price) AS 'price', 1.0 * round(SUM(price) / COUNT(user_id),2) AS 'avg price'
FROM home_test
WHERE is_purchase = 'True'
GROUP BY 1, 2, 3, 4  
ORDER BY 1 DESC, users DESC;

--Q6: Most popular results from quiz (slide 16 and 17)
SELECT style, fit, shape, color, COUNT (user_id) AS 'count'
FROM quiz
GROUP BY 1, 2, 3, 4
ORDER BY count DESC
LIMIT 10;

â€”End of Code and Presentation

